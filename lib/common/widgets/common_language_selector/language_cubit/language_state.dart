// This file is "main.dart"
import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'language_state.freezed.dart';
// optional: Since our LanguageState class is serializable, we must add this line.
// But if LanguageState was not serializable, we could skip it.
part 'language_state.g.dart';

@freezed
class LanguageState with _$LanguageState {
  const factory LanguageState({
    @JsonKey(
      name: 'language',
      fromJson: languageFromJson,
      toJson: languageToJson,
    )
    required String? currentLanguage,
    @JsonKey(
      name: 'languageList',
      fromJson: languageListFromJson,
      toJson: languageListToJson,
    )
    required List<String>? languagesAvailable,
  }) = _LanguageState;

  factory LanguageState.fromJson(Map<String, Object?> json) =>
      _$LanguageStateFromJson(json);

  factory LanguageState.init() {
    return const LanguageState(
      currentLanguage: null,
      languagesAvailable: null,
    );
  }
}

String? languageFromJson(String? language) {
  return language;
}

String? languageToJson(String? language) => language;

List<String>? languageListFromJson(List<String>? language) {
  return language;
}

List<String>? languageListToJson(List<String>? language) => language;
