/* import 'package:sad_app/app/modules/home/models/contact/contact_model.dart';

abstract class ContactState {}

class ContactInitialState extends ContactState {}

class ContactLoading extends ContactState {}

class ContactLoaded extends ContactState {
  final List<ContactModel>? contactList;

  ContactLoaded({this.contactList});
}

class ContactError extends ContactState {
  final String? error;

  ContactError({this.error});
}
 */

// This file is "main.dart"
import 'package:sad_app/app/modules/home/models/contact/contact_model.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'contact_state.freezed.dart';
// optional: Since our ContactModel class is serializable, we must add this line.
// But if ContactModel was not serializable, we could skip it.
//part 'contact_state.g.dart';

@freezed
class ContactState with _$ContactState {
  const factory ContactState({
    required List<ContactModel>? contactList,
    required String? error,
    required bool? isLoading,
    required bool? showCheckIcon,
  }) = _ContactState;

  factory ContactState.init() {
    return const ContactState(
      contactList: null,
      error: null,
      isLoading: false,
      showCheckIcon: false,
    );
  }
}
