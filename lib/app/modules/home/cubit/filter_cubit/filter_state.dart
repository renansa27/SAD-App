/* abstract class FilterState {}

class FilterInitialState extends FilterState {}

class FilterLoading extends FilterState {}

class FilterLoaded extends FilterState {
  final String? filterValue;

  FilterLoaded({this.filterValue});
}

class FilterError extends FilterState {
  final String? error;

  FilterError({this.error});
}
 */

// This file is "main.dart"
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'filter_state.freezed.dart';
// optional: Since our Phone class is serializable, we must add this line.
// But if Phone was not serializable, we could skip it.
part 'filter_state.g.dart';

@freezed
class FilterState with _$FilterState {
  const factory FilterState({
    required String? filterValue,
    required String? error,
  }) = _FilterState;

  factory FilterState.init() {
    return const FilterState(
      filterValue: null,
      error: null,
    );
  }

  factory FilterState.fromJson(Map<String, Object?> json) =>
      _$FilterStateFromJson(json);
}
